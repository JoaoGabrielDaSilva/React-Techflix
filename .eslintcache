[{"/Users/macbook/Documents/TechFlix/TechFlix-React/src/index.js":"1","/Users/macbook/Documents/TechFlix/TechFlix-React/src/App.js":"2","/Users/macbook/Documents/TechFlix/TechFlix-React/src/styles/GlobalStyles.js":"3","/Users/macbook/Documents/TechFlix/TechFlix-React/src/components/Header/index.jsx":"4","/Users/macbook/Documents/TechFlix/TechFlix-React/src/pages/Home/index.jsx":"5","/Users/macbook/Documents/TechFlix/TechFlix-React/src/pages/Movie/index.jsx":"6","/Users/macbook/Documents/TechFlix/TechFlix-React/src/pages/MovieDetails/index.jsx":"7","/Users/macbook/Documents/TechFlix/TechFlix-React/src/pages/MoviesSearch/index.jsx":"8","/Users/macbook/Documents/TechFlix/TechFlix-React/src/components/Header/styles.js":"9","/Users/macbook/Documents/TechFlix/TechFlix-React/src/pages/Home/styles.js":"10","/Users/macbook/Documents/TechFlix/TechFlix-React/src/pages/Home/dateHelper.js":"11","/Users/macbook/Documents/TechFlix/TechFlix-React/src/pages/MoviesSearch/styles.js":"12","/Users/macbook/Documents/TechFlix/TechFlix-React/src/components/Card/index.jsx":"13","/Users/macbook/Documents/TechFlix/TechFlix-React/src/components/Card/styles.js":"14","/Users/macbook/Documents/TechFlix/TechFlix-React/src/pages/Movie/styles.js":"15","/Users/macbook/Documents/TechFlix/TechFlix-React/src/pages/MovieDetails/styles.js":"16","/Users/macbook/Documents/TechFlix/TechFlix-React/src/components/Header/getSeachData.js":"17"},{"size":198,"mtime":1611154917532,"results":"18","hashOfConfig":"19"},{"size":750,"mtime":1611170204163,"results":"20","hashOfConfig":"19"},{"size":418,"mtime":1611154917535,"results":"21","hashOfConfig":"19"},{"size":833,"mtime":1611176412622,"results":"22","hashOfConfig":"19"},{"size":1640,"mtime":1611172029269,"results":"23","hashOfConfig":"19"},{"size":1638,"mtime":1611170064481,"results":"24","hashOfConfig":"19"},{"size":1977,"mtime":1611173628431,"results":"25","hashOfConfig":"19"},{"size":389,"mtime":1611174595060,"results":"26","hashOfConfig":"19"},{"size":1681,"mtime":1611162401090,"results":"27","hashOfConfig":"19"},{"size":492,"mtime":1611163647592,"results":"28","hashOfConfig":"19"},{"size":1246,"mtime":1611154917532,"results":"29","hashOfConfig":"19"},{"size":431,"mtime":1611154917535,"results":"30","hashOfConfig":"19"},{"size":568,"mtime":1611172340779,"results":"31","hashOfConfig":"19"},{"size":971,"mtime":1611163799185,"results":"32","hashOfConfig":"19"},{"size":492,"mtime":1611164164826,"results":"33","hashOfConfig":"19"},{"size":1718,"mtime":1611173998692,"results":"34","hashOfConfig":"19"},{"size":138,"mtime":1611176655314,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1o1t1n7",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/macbook/Documents/TechFlix/TechFlix-React/src/index.js",[],["74","75"],"/Users/macbook/Documents/TechFlix/TechFlix-React/src/App.js",[],"/Users/macbook/Documents/TechFlix/TechFlix-React/src/styles/GlobalStyles.js",[],"/Users/macbook/Documents/TechFlix/TechFlix-React/src/components/Header/index.jsx",["76"],"import React from 'react'\nimport GlobalStyles from '../../styles/GlobalStyles'\n\nimport { Container, Logo, Movies, Trending, Search } from './styles'\n\nimport { Link } from 'react-router-dom'\n\nimport logo from '../../Images/logo.png'\nimport GetSearchData from './getSeachData'\n\nconst Header = React.FC = () => {\n\n    return (\n        <Container>\n            <Logo>\n                <img src={logo} alt=\"\"/>\n            </Logo>\n            <Trending>\n                <li><Link to={'/'}>Trending</Link></li>\n            </Trending>\n            <Movies>\n                <li><Link to={'/movies'}>Movies</Link></li>\n            </Movies>\n            <Search>\n                <input onKeyUp={(event) => GetSearchData(event)} placeholder=\"Buscar filmes\" />\n            </Search>\n            \n        </Container>\n    )\n}\n\nexport default Header","/Users/macbook/Documents/TechFlix/TechFlix-React/src/pages/Home/index.jsx",[],"/Users/macbook/Documents/TechFlix/TechFlix-React/src/pages/Movie/index.jsx",[],"/Users/macbook/Documents/TechFlix/TechFlix-React/src/pages/MovieDetails/index.jsx",["77","78"],"import React, { useState, useEffect }from 'react'\nimport axios from 'axios'\nimport { Container, Main, LeftSide, ImageContainer, RightSide, InfoContainer } from './styles'\n\nimport DateHelper from '../Home/dateHelper'\n\nimport { useParams, Link } from 'react-router-dom'\n\nconst MovieDetails = React.FC = () => {\n\n    function GetInfo() {\n        const { id } = useParams()\n        const [currentData, setData] = useState([])\n\n        useEffect(async () => {\n            const url = `https://api.themoviedb.org/3/movie/${id}?api_key=dfca496b57994b17cd605b1ed8862140`\n            await axios.get(url)\n            .then(response => {\n                const info = {\n                    id: response.data.id,\n                    name: response.data.original_title || response.data.original_name,\n                    image: response.data.poster_path,\n                    date: DateHelper(response.data.release_date || response.data.first_air_date),\n                    note: response.data.vote_average,\n                    description: response.data.overview\n                }\n\n                setData(info)\n            })\n            .catch()\n        }, [])\n        if (currentData) {\n            return currentData\n        }\n    }\n\n    const request = GetInfo()\n\n    console.log(request)\n\n    return (\n        <Container>\n            <Main>\n                <LeftSide>\n                    <ImageContainer>\n                        <img src={`http://image.tmdb.org/t/p/w500${request.image}`} alt=\"\"/>\n                    </ImageContainer>\n                        <h5>{request.date}</h5>\n                </LeftSide>\n                <RightSide>\n                    <Link to='/'><button>Voltar</button></Link>\n                    <InfoContainer>\n                        <h1>{request.name}</h1>\n                        <p>{request.description}</p>\n                    </InfoContainer>\n                </RightSide>\n            </Main>\n        </Container>\n    )\n}\n\nexport default MovieDetails","/Users/macbook/Documents/TechFlix/TechFlix-React/src/pages/MoviesSearch/index.jsx",[],"/Users/macbook/Documents/TechFlix/TechFlix-React/src/components/Header/styles.js",[],"/Users/macbook/Documents/TechFlix/TechFlix-React/src/pages/Home/styles.js",[],"/Users/macbook/Documents/TechFlix/TechFlix-React/src/pages/Home/dateHelper.js",["79"],"export default function DateHelper(date) {\n\n    date = date.split('-')\n    const months = [\n        'Jan', 'Feb', 'Mar', 'Apr',\n        'May', 'Jun', 'Jul', 'Aug', 'Sep',\n        'Oct', 'Nov', 'Dez'\n    ]\n\n    const daySufix = [\n        'st', 'nd', 'rd'\n    ]\n\n    let day = parseInt(date[2], 10)\n    let month = parseInt(date[1], 10) - 1\n    const year = date[0]\n    \n    for (let i = 0; i < daySufix.length + 1; i++) {\n        if (day === i) {\n            day += `${daySufix[i - 1]}`\n            break\n        }\n       if (i === daySufix.length) {\n            day += 'th'\n       }\n    }\n\n    for (let i = 0; i < months.length; i++) {\n        if (month === i) {\n            month = months[i]\n        }\n    }\n\n    const formatedData = `${month} ${day}, ${year}`\n    return formatedData\n\n}\n\nfunction formatDay(day) {\n\n    \n\n    // let formatedDay = null\n\n    // switch(day) {\n    //     case '01':\n    //         formatedDay = day += 'st'\n    //         break\n    //     case '02':\n    //         formatedDay = day += 'nd'\n    //         break\n    //     case '03':\n    //         formatedDay = day += 'rd'\n    //         break\n    //     default:\n    //         formatedDay = day += 'th'\n    //         break\n    // }\n\n    // return formatedDay\n}","/Users/macbook/Documents/TechFlix/TechFlix-React/src/pages/MoviesSearch/styles.js",[],"/Users/macbook/Documents/TechFlix/TechFlix-React/src/components/Card/index.jsx",[],"/Users/macbook/Documents/TechFlix/TechFlix-React/src/components/Card/styles.js",[],"/Users/macbook/Documents/TechFlix/TechFlix-React/src/pages/Movie/styles.js",[],"/Users/macbook/Documents/TechFlix/TechFlix-React/src/pages/MovieDetails/styles.js",[],"/Users/macbook/Documents/TechFlix/TechFlix-React/src/components/Header/getSeachData.js",["80","81"],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":2,"column":8,"nodeType":"88","messageId":"89","endLine":2,"endColumn":20},{"ruleId":"90","severity":1,"message":"91","line":15,"column":19,"nodeType":"92","endLine":31,"endColumn":10},{"ruleId":"90","severity":1,"message":"93","line":31,"column":12,"nodeType":"94","endLine":31,"endColumn":14,"suggestions":"95"},{"ruleId":"86","severity":1,"message":"96","line":39,"column":10,"nodeType":"88","messageId":"89","endLine":39,"endColumn":19},{"ruleId":"86","severity":1,"message":"97","line":1,"column":10,"nodeType":"88","messageId":"89","endLine":1,"endColumn":14},{"ruleId":"86","severity":1,"message":"98","line":2,"column":10,"nodeType":"88","messageId":"89","endLine":2,"endColumn":20},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"no-unused-vars","'GlobalStyles' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["101"],"'formatDay' is defined but never used.","'Link' is defined but never used.","'useHistory' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"102","fix":"103"},"Update the dependencies array to be: [id]",{"range":"104","text":"105"},[1146,1148],"[id]"]